name: üìã Changelog Check

on:
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]
  
  # Ruƒçn√≠ spu≈°tƒõn√≠
  workflow_dispatch:

jobs:
  changelog-check:
    name: üîç Kontrola CHANGELOG.md
    runs-on: ubuntu-latest
    
    steps:
    - name: üì• Checkout k√≥du
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: üìã Kontrola aktualizace changelog
      id: changelog
      run: |
        echo "üîç Kontroluji zmƒõny v pull requestu..."
        
        # Z√≠skat seznam zmƒõnƒõn√Ωch soubor≈Ø
        CHANGED_FILES=$(git diff --name-only origin/main...HEAD)
        echo "üìù Zmƒõnƒõn√© soubory:"
        echo "$CHANGED_FILES"
        echo ""
        
        # Zkontrolovat, zda byly zmƒõnƒõny zdrojov√© soubory
        SOURCE_CHANGES=$(echo "$CHANGED_FILES" | grep -E "\.(js|html|md|yml|yaml|css|scss|liquid|rb)$" | grep -v "CHANGELOG.md" || true)
        
        if [ -n "$SOURCE_CHANGES" ]; then
          echo "üìù Detekovan√© zmƒõny ve zdrojov√Ωch souborech:"
          echo "$SOURCE_CHANGES" | sed 's/^/   - /'
          echo ""
          
          # Zkontrolovat, zda byl aktualizov√°n CHANGELOG.md
          if echo "$CHANGED_FILES" | grep "CHANGELOG.md" > /dev/null; then
            echo "‚úÖ CHANGELOG.md byl aktualizov√°n"
            echo "changelog_updated=true" >> $GITHUB_OUTPUT
            
            # Zkontrolovat form√°t changelog entr≈Ø
            if git diff origin/main...HEAD CHANGELOG.md | grep -E "^\+.*\[Unreleased\]" -A 20 | grep -E "^\+\s*-\s*\*\*.*\*\*" > /dev/null; then
              echo "‚úÖ Changelog entries maj√≠ spr√°vn√Ω form√°t"
              echo "changelog_format_ok=true" >> $GITHUB_OUTPUT
            else
              echo "‚ö†Ô∏è Changelog entries mo≈æn√° nemaj√≠ spr√°vn√Ω form√°t"
              echo "   Oƒçek√°van√Ω form√°t: - **N√°zev** - popis"
              echo "changelog_format_ok=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "‚ö†Ô∏è CHANGELOG.md nebyl aktualizov√°n"
            echo "changelog_updated=false" >> $GITHUB_OUTPUT
            echo ""
            echo "üí° Zva≈æte p≈ôid√°n√≠ n√°sleduj√≠c√≠ch zmƒõn do CHANGELOG.md:"
            echo "$SOURCE_CHANGES" | sed 's/^/   - /'
            echo ""
            echo "üìã Form√°t pro changelog:"
            echo "   ### P≈ôid√°no/Zmƒõnƒõno/Opraveno"
            echo "   - **N√°zev zmƒõny** - struƒçn√Ω popis"
          fi
        else
          echo "‚ÑπÔ∏è ≈Ω√°dn√© zmƒõny ve zdrojov√Ωch souborech nebyly detekovan√©"
          echo "changelog_required=false" >> $GITHUB_OUTPUT
        fi

    - name: üìä Anal√Ωza typu zmƒõn
      if: steps.changelog.outputs.changelog_updated == 'true'
      run: |
        echo "üîç Anal√Ωza changelog entr≈Ø..."
        
        # Extrakce nov√Ωch changelog entr≈Ø
        NEW_ENTRIES=$(git diff origin/main...HEAD CHANGELOG.md | grep "^+" | grep -E "\*\*.*\*\*" || true)
        
        if [ -n "$NEW_ENTRIES" ]; then
          echo "üìù Nov√© changelog entries:"
          echo "$NEW_ENTRIES" | sed 's/^+/   /'
          
          # Anal√Ωza typ≈Ø zmƒõn
          if echo "$NEW_ENTRIES" | grep -i "p≈ôid√°no\|added" > /dev/null; then
            echo "üÜï Detekovan√© nov√© funkcionality"
          fi
          if echo "$NEW_ENTRIES" | grep -i "opraveno\|fixed" > /dev/null; then
            echo "üîß Detekovan√© opravy chyb"
          fi
          if echo "$NEW_ENTRIES" | grep -i "zmƒõnƒõno\|changed" > /dev/null; then
            echo "üîÑ Detekovan√© zmƒõny existuj√≠c√≠ch funkc√≠"
          fi
        fi

    - name: üí¨ Koment√°≈ô na PR (changelog chyb√≠)
      if: steps.changelog.outputs.changelog_updated == 'false'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `## üìã Changelog Update Required
            
            ‚ö†Ô∏è Tento PR obsahuje zmƒõny ve zdrojov√Ωch souborech, ale **CHANGELOG.md** nebyl aktualizov√°n.
            
            ### üîß Jak opravit:
            1. Otev≈ôete \`CHANGELOG.md\`
            2. P≈ôidejte entry do sekce \`[Unreleased]\`
            3. Pou≈æijte form√°t: \`- **N√°zev zmƒõny** - popis\`
            
            ### üìã Typy zmƒõn:
            - **P≈ôid√°no** - nov√© funkcionality
            - **Zmƒõnƒõno** - zmƒõny existuj√≠c√≠ch funkc√≠  
            - **Opraveno** - opravy chyb
            - **Odstranƒõno** - odstranƒõn√© funkcionality
            - **Bezpeƒçnost** - bezpeƒçnostn√≠ z√°platy
            
            ### üí° P≈ô√≠klad:
            \`\`\`markdown
            ### P≈ôid√°no
            - **Rating syst√©m** - u≈æivatel√© mohou hodnotit ƒçl√°nky emotikony
              - LocalStorage persistence hodnocen√≠
              - Responsivn√≠ design pro mobily
            \`\`\`
            
            ---
            *Tento koment√°≈ô byl automaticky vygenerov√°n changelog checkerem*`
          })

    - name: ‚úÖ Changelog Status Summary
      run: |
        echo "## üìã Changelog Check Summary" >> $GITHUB_STEP_SUMMARY
        if [ "${{ steps.changelog.outputs.changelog_updated }}" == "true" ]; then
          echo "‚úÖ CHANGELOG.md byl aktualizov√°n" >> $GITHUB_STEP_SUMMARY
          if [ "${{ steps.changelog.outputs.changelog_format_ok }}" == "true" ]; then
            echo "‚úÖ Form√°t changelog entries je spr√°vn√Ω" >> $GITHUB_STEP_SUMMARY
          else
            echo "‚ö†Ô∏è Form√°t changelog entries m≈Ø≈æe b√Ωt lep≈°√≠" >> $GITHUB_STEP_SUMMARY
          fi
        elif [ "${{ steps.changelog.outputs.changelog_required }}" != "false" ]; then
          echo "‚ö†Ô∏è CHANGELOG.md nebyl aktualizov√°n navzdory zmƒõn√°m ve zdrojov√Ωch souborech" >> $GITHUB_STEP_SUMMARY
        else
          echo "‚ÑπÔ∏è Aktualizace changelogu nen√≠ pot≈ôeba" >> $GITHUB_STEP_SUMMARY
        fi
        
    # Volitelnƒõ: selh√°n√≠ workflow pokud changelog chyb√≠ (zakomentov√°no pro varov√°n√≠ m√≠sto selh√°n√≠)
    # - name: ‚ùå Fail if changelog missing
    #   if: steps.changelog.outputs.changelog_updated == 'false'
    #   run: |
    #     echo "‚ùå CHANGELOG.md nebyl aktualizov√°n!"
    #     exit 1